#include<stdio.h>
#include<stdlib.h>
#define MAX_SIZE 100
void insert(int *arr,int *size){
    int pos,value,i;
    printf("enter pos:");
    scanf("%d",&pos);
    printf("enter value:");
    scanf("%d",&value);
    if(pos>*size || pos<0)
    printf("invalid pos!!!\n");
    else{
        for(i=*size;i>=pos;i--){
            arr[i]=arr[i-1];
        }
        arr[pos-1]=value;
        (*size)++;
        printf("element inserted\n");
    }
}
void printlist(int *arr, int n){
    if(n==0)
    printf("list is empty");
    else{
        int i;
        printf("list elements are:");
        for(i=0;i<n;i++){
            printf("%d",arr[i]);
        }
    }
}
void delete (int *arr,int *size){
    int pos,i;
    printf("enter position:");
    scanf("%d",&pos);
if(pos<=0 || pos>*size)
printf("invalid pos");
else{
    for(i=pos-1;i<*size;i++){
        arr[i]=arr[i+1];
    }
    (*size)--;
    printf("element deleted");
}    
}
void search(int *arr,int size){
    int value,i,flag=0;
    printf("enter searching element:");
    scanf("%d",&value);
    for( i=0;i<size;i++){
        if(arr[i]==value){
            flag=1;
            break;
        }
    }
}
int main(){
    int arr[MAX_SIZE],size,i;
    printf("enter list size:");
    scanf("%d",&size);
    printf("enter list elements:");
    for(i=0;i<size;i++){
        scanf("%d",&arr[i]);
    }
    while(1){
        printf("1.insertion\n");
        printf("2.Deletion\n");
        printf("3.Traversing\n");
        printf("4.searching\n");
        printf("5.Exit\n");
        int choice;
        printf("enter choice:");
        scanf("%d",&choice);
        switch(choice){
            case 1:
            insert(arr,&size);
            break;
            case 2:
            delete(arr,&size);
            break;
            case 3:
            printlist(arr,&size);
            break;
            case 4:
            search(arr,&size);
            break;
            case 5:
            exit(0);
            break;
            default:
            printf("invalid choice");
        }
        printf("\n");
        system("pause");
    }
    return 0;
}
